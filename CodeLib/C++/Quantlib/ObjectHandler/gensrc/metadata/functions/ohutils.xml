<Category name='ohutils'>
  <description>objecthandler utilities.</description>
  <displayName>ObjectHandler Utilities</displayName>
  <xlFunctionWizardCategory>ObjectHandler</xlFunctionWizardCategory>
  <addinIncludes>
    <include>oh/utilities.hpp</include>
  </addinIncludes>

  <copyright>
    Copyright (C) 2004, 2005, 2006, 2007, 2008 Ferdinando Ametrano
    Copyright (C) 2004, 2005, 2006, 2007, 2011 Eric Ehlers
    Copyright (C) 2005, 2006 Plamen Neykov
    Copyright (C) 2004 StatPro Italia srl
  </copyright>

  <Functions>

    <Procedure name='ohTrigger' dependencyTrigger='false'>
      <description>forces a dependency between multiple ranges and returns the update counter.</description>
      <alias>ObjectHandler::dependsOn</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Dummy0' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy1' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy2' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy3' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy4' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy5' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy6' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy7' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy8' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy9' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy10' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy11' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy12' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
          <Parameter name='Dummy13' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy range reference (ignored).</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohFunctionCount'>
      <description>returns the number of functions in this addin.</description>
      <alias>ObjectHandler::version</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohPack'>
      <description>trim error/null/empty values from bottom/right of matrix/vector.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='InputRange'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>scalar/vector/matrix of values to be packed.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohRemoveInvalidRows'>
      <description>trim error/null/empty rows from matrix/vector.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='InputRange'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>scalar/vector/matrix of values to be packed.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='alMergeRange'>
      <description>merge multiple ranges into a single range.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='InputRange1'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>the first range to be merged.</description>
          </Parameter>  
          <Parameter name='InputRange2'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>the second range to be merged.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='alReadFromAccess'>
      <description>Read data from Access Table.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='DatabasePath'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Absolute database file address.</description>
          </Parameter>
          <Parameter name='SQLScript'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>The SQL query sentence.</description>
          </Parameter>
          <Parameter name='IsHeaderInclude'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>1 refers to show the table head, 0 refers to not shown</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='alReadFromAccessCount'>
      <description>Return the number of records read from Access.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='DatabasePath'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Absolute database file address.</description>
          </Parameter>
          <Parameter name='SQLScript'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>The SQL query sentence.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='alReadFromMySQL'>
      <description>Read data from MySQL database.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='DB_add'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Database IP address</description>
          </Parameter>
          <Parameter name='Ac_name'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Database account name</description>
          </Parameter>
          <Parameter name='Ac_psw'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Database account password</description>
          </Parameter>
          <Parameter name='DB_name'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Database name</description>
          </Parameter>
          <Parameter name='SQL_query'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>SQL query sentence.</description>
          </Parameter>
          <Parameter name='DB_port'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Database name</description>
          </Parameter>
          <Parameter name='IsHeaderInclude'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>1 refers to show the table head, 0 refers to not shown</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Procedure>
    
    <Procedure name='alWriteToMySQL'>
      <description>Read data from Excel Table and write into MySQL database.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='DB_add'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Database IP address</description>
          </Parameter>
          <Parameter name='Ac_name'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Database account name</description>
          </Parameter>
          <Parameter name='Ac_psw'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Database account password</description>
          </Parameter>
          <Parameter name='DB_name'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Database name</description>
          </Parameter>
          <Parameter name='DB_port'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Database name</description>
          </Parameter>
          <Parameter name='TableName'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Target table name</description>
          </Parameter>
          <Parameter name='TableHeader'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>One row of fields</description>
          </Parameter>
          <Parameter name='Dataset'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>The area of data matches the fields</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='alWriteToAccess'>
      <description>Read data from Excel Table and write into Access file.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='DatabasePath'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Absolute database file address.</description>
          </Parameter>
          <Parameter name='TableName'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Target table name</description>
          </Parameter>
          <Parameter name='TableHeader'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>One row of fields</description>
          </Parameter>
          <Parameter name='Dataset'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>The area of data matches the fields</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='alRangeSumIf'>
      <description>sum up the values whose correspondent cell is in the filtered range.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='TargetRange'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>the target range to be checked if it is in the filtered range.</description>
          </Parameter>
          <Parameter name='FilterRange'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>the range to be searched.</description>
          </Parameter>
          <Parameter name='SumRange'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>the range to be sum up.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>
    
    <Procedure name='alGetUniqueList'>
      <description>returns a range with unique elements.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='InputRange'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>the range to be filtered.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='alIsConsecutiveTrend'>
      <description>check if every element in the range is positive or negative.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='InputRange'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>the range to be checked.</description>
          </Parameter>
          <Parameter name='CheckPositiveOrNegative' default='true'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>TRUE refers to check is every element is positive.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohRemoveInvalidColumns'>
      <description>trim error/null/empty columns from matrix/vector.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='InputRange'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>scalar/vector/matrix of values to be packed.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohStringSplit' dependencyTrigger='False'>
      <description>Split a string into substrings using the given delimiter.</description>
      <alias>ObjectHandler::split</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='String'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>string to be parsed.</description>
          </Parameter>
          <Parameter name='Delimiters'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>delimiter characters.</description>
          </Parameter>
          <Parameter name='ConcatenateDelim' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>specifies if multiple adjacent delimiters are to be considered as one (TRUE) or not (FALSE).</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>void</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohStringConcatenate' dependencyTrigger='False'>
      <description>Concatenate substrings into a single string using the given delimiter.</description>
      <alias>ObjectHandler::concatenate</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Substrings'>
            <type>string</type>
            <tensorRank>vector</tensorRank>
            <description>string to be parsed.</description>
          </Parameter>
          <Parameter name='Delimiter'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>delimiter string.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohFilter' dependencyTrigger='False'>
      <description>Filters the first vector using the second one as boolean inclusion flags.</description>
      <alias>ObjectHandler::filter</alias>
      <xlWizardRecalc>true</xlWizardRecalc>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Input'>
            <type>any</type>
            <tensorRank>vector</tensorRank>
            <description>vector to be filtered.</description>
          </Parameter>
          <Parameter name='Flags'>
            <type>bool</type>
            <tensorRank>vector</tensorRank>
            <description>vector to inclusion flags.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohRangeRetrieveError' dependencyTrigger='false'>
      <description>Retrieve the error message if any that is associated with the given range.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual' xlMacro='false'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Range'>
            <type>reference</type>
            <tensorRank>scalar</tensorRank>
            <description>range to query.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>reference</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='alErr' dependencyTrigger='false'>
      <description>Retrieve the error message if any that is associated with the given range.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual' xlMacro='false'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Range'>
            <type>reference</type>
            <tensorRank>scalar</tensorRank>
            <description>range to query.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>reference</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohRetrieveErrorImpl' dependencyTrigger='false' visible='false'>
      <description>Concrete implementation of ohRangeRetrieveError().  This function is hidden.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Range'>
            <type>reference</type>
            <tensorRank>scalar</tensorRank>
            <description>range to query.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohVbaError'>
      <description>Retrieve error message associated with VBA code.</description>
      <alias>ObjectHandler::RepositoryXL::instance().vbaError</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohBoostVersion'>
      <description>returns the version number of Boost.</description>
      <alias>ObjectHandler::boostVersion</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohVersion'>
      <description>returns the version number of ObjectHandler.</description>
      <alias>ObjectHandler::version</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohStack'>
      <description>Returns the amount of stack space left available to the XLL.  This function returns the number 65535 when the stack size exceeds 64K.</description>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='manual'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

  </Functions>

</Category>
